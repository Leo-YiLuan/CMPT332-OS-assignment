/*
# NAME: Matthew Munro
# NSID: mam552
# STUDENT NUMBER: 11291769
# NAME: Yi Luan
# NSID: yil160
# STUDENT NUMBER: 11253856
# CMPT 332 2022
# A1 Phase 2
*/

PartA1:

PartA2:

    Argument validation:
    input: ./partA2
    output: Error: Incorrect number of arguments. Usage: ./<exectuable program>
    <threads> <deadline> <size>

    input: ./part2 0 0 0
    output: Error: Arguments supplied must be greater than 0.

    input: ./part2 0 1 1
    output: Error: Arguments supplied must be greater than 0.

    input: ./part2 1 0 1
    output: Error: Arguments supplied must be greater than 0.

    input: ./part2 1 1 0
    output: Error: Arguments supplied must be greater than 0.

    input: ./part2 4 4 64
    output: Size is too big, not enough space to hold counts

    ====== Argument validation test PASS. =======

    Functional testing;
    input: ./part2 4 4 4
    output:
          Thread id: 0, fib(4) to fib(1) is called
          Thread id: 1, fib(4) to fib(1) is called
          Thread id: 2, fib(4) to fib(1) is called
          Thread id: 3, fib(4) to fib(1) is called
    (ALL 4 threads created and calls fib())

    input: ./part2 6 4 12
    output:
          Thread id: 0, fib(12) to fib(1) is called
          Thread id: 1, fib(12) to fib(1) is called
          Thread id: 2, fib(12) to fib(1) is called
          Thread id: 3, fib(12) to fib(1) is called
          Thread id: 4, fib(12) to fib(1) is called
          Thread id: 5, fib(12) to fib(1) is called
    (ALL 6 threads created and calls fib())

    ====== Functional testing PASS. =======


PartA3:

    Argument validation:
    input: ./partA3
    output: Error: Incorrect number of arguments. Usage: ./<exectuable program>
    <threads> <deadline> <size>

    input: ./part3 0 0 0
    output: Error: Arguments supplied must be greater than 0.

    input: ./part3 0 1 1
    output: Error: Arguments supplied must be greater than 0.

    input: ./part3 1 0 1
    output: Error: Arguments supplied must be greater than 0.

    input: ./part3 1 1 0
    output: Error: Arguments supplied must be greater than 0.

    input: ./part3 4 4 64
    output: Size is too big, not enough space to hold counts

    ====== Argument validation test PASS. =======

    Functional testing;
    input: ./part3 4 4 4
    output:
          Thread id: 139917292205632, fib(4) to fib(1) is called
          Thread id: 139917267027520, fib(4) to fib(1) is called
          Thread id: 139917275420224, fib(4) to fib(1) is called
          Thread id: 139917283812928, fib(4) to fib(1) is called
    (ALL 4 threads created and calls fib())

    input: ./part3 8 10 10
    output:
          Thread id: 139649940977216, fib(10) to fib(1) is called
          Thread id: 139649915799104, fib(10) to fib(1) is called
          Thread id: 139649907406400, fib(10) to fib(1) is called
          Thread id: 139649924191808, fib(10) to fib(1) is called
          Thread id: 139649787885120, fib(10) to fib(1) is called
          Thread id: 139649932584512, fib(10) to fib(1) is called
          Thread id: 139649899013696, fib(10) to fib(1) is called
          Thread id: 139649890620992, fib(10) to fib(1) is called

    (ALL 8 threads created and calls fib())

    ====== Functional testing PASS. =======


PartA4:

    Argument validation:
    input: ./partA4
    output: Error: Incorrect number of arguments. Usage: ./<exectuable program>
    <threads> <deadline> <size>
    input: ./part4 0 0 0
    output: Error: Arguments supplied must be greater than 0.
    input: ./part4 0 1 1
    output: Error: Arguments supplied must be greater than 0.
    input: ./part4 1 0 1
    output: Error: Arguments supplied must be greater than 0.

    input: ./part4 1 1 0
    output: Error: Arguments supplied must be greater than 0.
    input: ./part4 4 4 64
    output: Size is too big, not enough space to hold counts

    ====== Argument validation test PASS. =======

    Functional testing;
    input: ./part4 4 4 4
    output:
          In timer process id: 70627
          timer is called start timing
          process: 70628 is created!
          In process: 70628, fib(4) is called!
          process: 70629 is created!
          In process: 70629, fib(4) is called!
          process: 70630 is created!
          In process: 70630, fib(4) is called!
          process: 70631 is created!
          In process: 70631, fib(4) is called!

    (ALL 5 processes include timer created and calls fib())

    input: ./part4 6 5 8
    output:
          In timer process id: 70998
          timer is called start timing
          process: 70999 is created!
          In process: 70999, fib(8) is called!
          process: 71000 is created!
          In process: 71000, fib(8) is called!
          process: 71001 is created!
          In process: 71001, fib(8) is called!
          process: 71002 is created!
          In process: 71002, fib(8) is called!
          process: 71006 is created!
          process: 71003 is created!
          In process: 71006, fib(8) is called!
          In process: 71003, fib(8) is called!

    (ALL 7 threads include timercreated and calls fib())

    ====== Functional testing PASS. =======
