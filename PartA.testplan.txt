# NAME: Matthew Munro
# NSID: mam552
# STUDENT NUMBER: 11291769
# NAME: Yi Luan
# NSID: yil160
# STUDENT NUMBER: 11253856
# CMPT 332 2022
# A1 Phase 2

PartA1:
    the basic test plan is input different arguments and check if the threads
created and call fib() successfully with given fib() size.

NOTE: Suggest test fib(33) to fib(38). Which do not take too long or too quick
to finish. If the fib() size is big, the 3 seconds gap in main after deadline
may not be able to let fib() print the result.

    Argument validation:
    1. Our limit of fib() size is set to 63. so if given a size argument
    greater than 63 will not work.
    2. Any input < 0 will stop the program and shows error message.
    3. With any valid arguments, the program should work. see below

    Functional testing;
    1. Check if all threads created.
    2. Check if the count of fib() is reasonable
    3. Check if the real time is printed correctly
    4. Check if fib() finished last recursive before exit.

PartA2:

    Argument validation:
    1. Our limit of fib() size is set to 63. so if given a size argument
    greater than 63 will not work.
    2. Any input < 0 will stop the program and shows error message.
    3. With any valid arguments, the program should work. see below

    Functional testing;
    1. Check if all threads created.
    2. Check if the fib() is called in each thread.


PartA3:

    Argument validation:
    1. Our limit of fib() size is set to 63. so if given a size argument
    greater than 63 will not work.
    2. Any input < 0 will stop the program and shows error message.
    3. With any valid arguments, the program should work. see below

    Functional testing;
    1. Check if all threads created.
    2. Check if the fib() is called in each thread.

PartA4:

    Argument validation:
    1. Our limit of fib() size is set to 63. so if given a size argument
    greater than 63 will not work.
    2. Any input < 0 will stop the program and shows error message.
    3. With any valid arguments, the program should work. see below

    Functional testing;
    1. Check if all processes created(include timer process).
    2. Check if the fib() is called in each processes.
